<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2024 gematik GmbH
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.gematik</groupId>
    <artifactId>kob-testsuite</artifactId>
    <version>1.0.7</version>
    <packaging>jar</packaging>
    <description>KOB Testsuite fuer PS Hersteller</description>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.maven-surefire-plugin>3.5.3</version.maven-surefire-plugin>
        <version.maven-failsafe-plugin>3.5.3</version.maven-failsafe-plugin>
        <version.tiger>3.7.9</version.tiger>
        <version.serenity>4.2.17</version.serenity>
        <jacoco.version>0.8.13</jacoco.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.5.18</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>de.gematik.test</groupId>
            <artifactId>tiger-test-lib</artifactId>
            <version>${version.tiger}</version>
        </dependency>
        <!-- Dependencies for API code generation -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.19.0</version>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.6</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>4.0.5</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>4.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
            <version>1.18.38</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <configuration>
                        <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                    </configuration>
                    <executions>
                        <execution>
                            <id>jacoco-initialize</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>jacoco-site</id>
                            <phase>package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${version.maven-surefire-plugin}</version>
                    <configuration>
                        <argLine>@{argLine} -Dfile.encoding=UTF-8</argLine>
                        <properties>
                            <property>
                                <name>listener</name>
                                <value>org.sonar.java.jacoco.JUnitListener</value>
                            </property>
                        </properties>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
            </plugin>
            <plugin>
                <groupId>de.gematik.test</groupId>
                <artifactId>tiger-maven-plugin</artifactId>
                <version>${version.tiger}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate-drivers</goal>
                            <goal>attach-tiger-agent</goal>
                        </goals>
                        <id>prepare-and-verify-tiger-tests-and-results</id>
                        <phase>generate-test-sources</phase>
                        <configuration>
                            <glues>
                                <glue>de.gematik.test.tiger.glue</glue>
                            </glues>
                        </configuration>
                    </execution>
                    <execution>
                        <goals>
                            <goal>generate-serenity-reports</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <useDefaultValues>true</useDefaultValues>
                            <!-- Ignore missing .env file e.g. docker image build step -->
                            <quiet>true</quiet>
                            <files>
                                <file>${project.basedir}/.env</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.maven-failsafe-plugin}</version>
                <configuration>
                    <!--
                        WorkflowUI needs this to allow it to block execution of maven,
                        else maven will try to kill and destroy the tiger spring boot apps
                     -->
                    <forkedProcessExitTimeoutInSeconds>18000</forkedProcessExitTimeoutInSeconds>
                    <systemPropertyVariables>
                        <cucumber.filter.tags>${TESTSUITE_TESTS}</cucumber.filter.tags>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.13.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/psTestdriver.yaml</inputSpec>
                            <generatorName>java</generatorName>
                            <library>resttemplate</library>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <apiPackage>de.gematik.test.psTestdriver</apiPackage>
                            <modelPackage>de.gematik.test.psTestdriver.dto</modelPackage>
                            <configOptions>
                                <dateLibrary>java8</dateLibrary>
                                <useBeanValidation>false</useBeanValidation>
                                <interfaceOnly>true</interfaceOnly>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>
                <executions>
                    <execution>
                        <id>empty-javadoc-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>javadoc</classifier>
                            <classesDirectory>${project.basedir}/src/test/java/</classesDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.7.1</version>
                <configuration>
                    <appendAssemblyId>true</appendAssemblyId>
                    <descriptors>
                        <descriptor>src/main/assembly/zip-test-report.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>zip-test-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
                Automatically fulfill gematik OSPO guidelines
                https://wiki.gematik.de/x/Gh_QJQ (Lizenz-Management in OSPO-Projekten)
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.5.0</version>
                <configuration>
                    <!-- file header -->
                    <licenseName>apache_v2_0</licenseName>
                    <licenseResolver>classpath://copyright-header/apache-license</licenseResolver>
                    <inceptionYear>2024</inceptionYear>
                    <organizationName>gematik GmbH</organizationName>
                    <canUpdateCopyright>true</canUpdateCopyright>

                    <!-- license download -->
                    <licensesOutputDirectory>${project.basedir}/third-party-licenses</licensesOutputDirectory>
                    <licensesOutputFile>${project.basedir}/third-party-licenses/licenses.xml</licensesOutputFile>
                    <forceDownload>false</forceDownload>

                    <includes>
                        <include>**/*.java</include>
                        <include>**/*.xml</include>
                    </includes>
                    <excludes>
                        <exclude>**/generated.*/**</exclude>
                    </excludes>
                </configuration>

                <dependencies>
                    <dependency>
                        <groupId>de.gematik</groupId>
                        <artifactId>ospo-resources</artifactId>
                        <version>1.3.0</version>
                    </dependency>
                </dependencies>

                <executions>
                    <!-- Download der transitiven Lizenzen -->
                    <execution>
                        <id>download-licenses</id>
                        <goals>
                            <goal>download-licenses</goal>
                        </goals>
                        <phase>none</phase>
                    </execution>

                    <!-- Update der Source-Header -->
                    <execution>
                        <id>update-file-header</id>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                    </execution>

                    <!-- Check der Source-Header -->
                    <execution>
                        <id>check-file-header</id>
                        <goals>
                            <goal>check-file-header</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- This profile is meant to create a feature bundle zip archive for upload to Titus.
             The zip will contain all feature files and the pom.xml

             To run it issue: mvn -P pack-bundle-zip
             ZIP file will be located in the target folder
        -->
        <profile>
            <id>pack-bundle-zip</id>
            <build>
                <defaultGoal>clean initialize</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.7.1</version>
                        <executions>
                            <execution>
                                <configuration>
                                    <appendAssemblyId>true</appendAssemblyId>
                                    <descriptors>
                                        <descriptor>src/main/assembly/zip-feature-bundle.xml</descriptor>
                                    </descriptors>
                                </configuration>
                                <id>zip-feature-bundle</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
